// index.js
import dotenv from "dotenv";
dotenv.config();

import { Client, GatewayIntentBits } from "discord.js";
import { startAdmin } from "./admin.js";
import "./scheduler.js"; // Scheduler importieren, startet automatisch

// âœ… Discord Client
export const client = new Client({
  intents: [
    GatewayIntentBits.Guilds,
    GatewayIntentBits.GuildMessages,
    GatewayIntentBits.MessageContent,
  ],
});

client.once("ready", () => {
  console.log(`âš“ Hafenmeister-Bot eingeloggt als ${client.user.tag}`);
});

// ğŸ“¥ Reagiere auf Nachrichten
import { loadMessages, saveMessages } from "./utils.js";

client.on("messageCreate", (message) => {
  if (message.author.bot) return;

  const cmd = message.content.toLowerCase();

  // ğŸ‘‰ Command !hafen (direkt sofortige Antwort)
  if (cmd === "!hafen") {
    const roll = Math.random() * 100;
    let antwort = "";

    if (roll < 80) {
      antwort = `Sehr geehrte/r <@${message.author.id}>, Ihre Waren kommen in der nÃ¤chsten Woche im Hafen von Annesburg an. Bitte lassen Sie diese vom Postmeister abholen.\nGezeichnet Hafenmeisterei Annesburg`;
    } else if (roll < 95) {
      antwort = `Sehr geehrte/r <@${message.author.id}>, Ihre Waren kommen in der nÃ¤chsten Woche im Hafen von Annesburg an. Leider haben Ratten auf dem Schiff die HÃ¤lfte der Ladung angeknabbert und die Seeleute mussten diese Kiste Ã¼ber Bord werfen.\nGezeichnet Hafenmeister Annesburg`;
    } else {
      antwort = `Sehr geehrte/r <@${message.author.id}>, das Schiff mit Ihrer Bestellung ist untergegangen. Die Reederei ist leider nicht versichert.\nGezeichnet Hafenmeister Annesburg`;
    }

    message.reply(antwort);
  }

  // ğŸ‘‰ Speichere ErwÃ¤hnungen
  if (message.mentions.has(client.user)) {
    const messages = loadMessages();
    const exists = messages.find(m => m.id === message.id);

    if (!exists) {
      messages.push({
        id: message.id,
        message: message.content,
        userId: message.author.id,
        channelId: message.channel.id, // wichtig fÃ¼r spÃ¤tere Antwort
        timestamp: message.createdTimestamp,
        scheduledTimestamp: Date.now() + 2 * 24 * 60 * 60 * 1000, // Standard: +2 Tage
        sent: false,
      });

      saveMessages(messages);
      console.log(`ğŸ’¾ Nachricht gespeichert: ${message.content}`);
    }
  }
});

// ğŸ”‘ Login
client.login(process.env.HAFEN_TOKEN);

// ğŸš€ Adminpanel starten
startAdmin();
